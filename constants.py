import numpy as np

# camera information
FOCAL_LENGTH = 500.
IMG_RES = 224
IMG_CENTER = [112,112]

# image data normalization 
IMG_NORM_MEAN = [0.485, 0.456, 0.406]
IMG_NORM_STD = [0.229, 0.224, 0.225]

# Iterative Regressor
SMPL_mean_cam   = './assets/cam.npy'
SMPL_mean_pose  = './assets/pose.npy'
SMPL_mean_shape = './assets/shape.npy'

# coordinate transformation matrix
euler_coordtrans_RIGHT = np.array([
       [   0,  -6,  10,
           0,   1,  -5,
           0, -10,   0,
           0,  10,   2,
           0,  10,  -2,
           0,  10,  10,
          30,  35,  10,
          20,  42,   8,
          15,  45,   8,
           0,  12,   5,
           0,  25,  -5,
           0,  25,  15,
          30, -75, -35,
          20, -45, -30,
          20, -45, -30]]) / 180 * np.pi
euler_coordtrans_LEFT = np.array([
       [   0,   6, -10,
           0,  -1,   5,
           0,  10,   0,
           0, -10,  -2,
           0, -10,   2,
           0, -10, -10,
          30, -35, -10,
          20, -42,  -8,
          15, -45,  -8,
           0, -12,  -5,
           0, -25,   5,
           0, -25, -15,
          30,  75,  35,
          20,  45,  30,
          20,  45,  30]]) / 180 * np.pi

# range of motion
BOF_RIGHT = np.array([
       [ -179,-179,-179,
           0, -40, -30,
           0,   0,   0,
           0,   0, -45,
           0, -20, -20,
           0,   0,   0,
           0,   0, -20,
           0, -10, -30,
           0,   0,   0,
           0,   0, -40,
           0, -20, -20,
           0,   0,   0,
           0,   0, -10,
           0, -90, -45,
           0,-100,   0,
           0, -90,   0],
        [179, 179, 179,
           0,   5,  90,
           0,   0, 110,
           0,   0,  90,
           0,  15, 100,
           0,   0, 110,
           0,   0,  85,
           0,  45, 100,
           0,   0, 100,
           0,   0,  90,
           0,  20,  90,
           0,   0, 110,
           0,   0,  80,
           0,  20,  45,
           0,   0,   0,
           0,  45,   0]]) / 180 * np.pi

BOF_LEFT = np.array([
        [  0,  -5, -90,
           0,   0,-110,
           0,   0, -90,
           0, -15,-100,
           0,   0,-110,
           0,   0, -85,
           0, -45,-100,
           0,   0,-100,
           0,   0, -90,
           0, -20, -90,
           0,   0,-110,
           0,   0, -80,
           0, -20, -45,
           0,   0,   0,
           0, -45,   0],
        [  0,  40,  30,
           0,   0,   0,
           0,   0,  45,
           0,  20,  20,
           0,   0,   0,
           0,   0,  20,
           0,  10,  30,
           0,   0,   0,
           0,   0,  40,
           0,  20,  20,
           0,   0,   0,
           0,   0,  10,
           0,  90,  45,
           0, 100,   0,
           0,  90,   0],
        ]) / 180 * np.pi